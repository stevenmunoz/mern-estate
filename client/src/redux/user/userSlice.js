import { createSlice } from "@reduxjs/toolkit";

// Initial state for the user slice
const initialState = {
    currenUser: null, // Holds the current user's information, initially null
    error: null,      // Holds any error messages, initially null
    loading: false,   // Indicates if a sign-in operation is in progress, initially false
};

// Create a slice for user state management
const userSlice = createSlice({
    name: "user", // Name of the slice
    initialState, // Initial state defined above
    reducers: {
        // Reducer to handle the start of a sign-in operation
        signInStart: (state) => {
            state.loading = true; // Set loading to true when sign-in starts
        },
        // Reducer to handle a successful sign-in operation
        signInSuccess: (state, action) => {
            state.currenUser = action.payload; // Update current user with the payload data
            state.loading = false;             // Set loading to false as sign-in is complete
            state.error = null;                // Clear any previous errors
        },
        // Reducer to handle a failed sign-in operation
        signInFailure: (state, action) => {
            state.error = action.payload; // Update error with the payload data
            state.loading = false;        // Set loading to false as sign-in failed
        },
    },
});

// Export the action creators generated by createSlice
export const { signInStart, signInSuccess, signInFailure } = userSlice.actions;

// Export the reducer function to be included in the Redux store
export default userSlice.reducer;